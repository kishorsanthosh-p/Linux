# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "kishor" ]

jobs:
  build:

    runs-on: self-hosted
    

#     strategy:
#       matrix:
#         node-version: [20.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
        
      - name: Git Issue Details
        run: |
          current_branch=$(git rev-parse --abbrev-ref HEAD)

          # Generate a new branch name
          new_branch="feature/${current_branch}"
          echo "Created branch: ${new_branch}"
          echo "Repository Name: ${{ github.repository }}"
          echo "Pusher Name: ${{ github.actor }}"

      - name: Google Chat Notification
        run: |
          curl --location --request POST '${{ secrets.WEBHOOK }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "cards": [
                  {
                      "header": {
                          "title": "Issue Tracker",
                          "subtitle": "Issue No: #${{ github.event.issue.number }}"
                      },
                      "sections": [
                          {
                              "widgets": [
                                  {
                                     "keyValue": {
                                          "topLabel": "Creator",
                                          current_branch=$(git rev-parse --abbrev-ref HEAD)
                                          new_branch="feature/${current_branch}"
                                          echo "Created branch: ${new_branch}"
                                      },
                                   },
                                   {
                                     "keyValue": {
                                          "topLabel": "Title",
                                         echo "Repository Name: ${{ github.repository }}"
                                      }
                                   },
                                   {
                                     "keyValue": {
                                          "topLabel": "Assigned Lables",
                                          echo "Pusher Name: ${{ github.actor }}"
                                      }
                                   },
                                   {
                                     "keyValue": {
                                          "topLabel": "Assignees",
                                          "content": "- ${{ join(github.event.issue.assignees.*.login) }}"
                                      }
                                   },
                                   {
                                      "buttons": [
                                          {
                                              "textButton": {
                                                  "text": "OPEN ISSUE",
                                                  "onClick": {
                                                      "openLink": {
                                                          "url": "${{ github.event.issue.html_url }}"
                                                      }
                                                  }
                                              }
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }'
          
          
          #     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm install
#     - run: npm run build --if-present

